[init]
pack_name=MPV_lazy
cmd="mkdir -p $pack_name/vapoursynth64/plugins/models/"
# 注：portable_config是这个路径"./portable_config/"，[lazy]才移到$pack_name

# 以下步骤按[节]顺序执行
# 参数（给定值必须小写）：
#     run=[true|false] 是否运行[默认：true]
#     task=[init|download|clone|lazy]  运行类型[默认：init]
#           init - 使用[init]中的参数初始化
#       download - 下载所需文件
#          clone - 克隆某仓库的文件（目前只支持github）
#           lazy - 加糖的克隆（克隆上游仓库main分支，并从上游仓库替换占位符文件）

# task=download的参数： 优先级：download_url > download_api > github_repo
#     github_repo= github仓库名（获取该仓库最新release的github api链接）
#    download_api= 能从文件名中解析出文件下载链接的链接（目前仅支持api.github.com）
#                       （用于获取最新文件，可修改脚本的get_download_url_from_download_api()，支持更多链接）
#    download_url= 文件下载链接
#   download_file= 被下载文件的文件名，可用通配符
#             cmd= 下载完后执行的命令

# task=clone的参数：
#      repository= 指定仓库的链接，优先级repository > github_repo，可用值举例见task=lazy
#     github_repo= 指定github仓库的仓库名
#             ref= 指定仓库的reference值，可用值举例见task=lazy
#             cmd= 克隆完后执行的命令

# task=lazy的参数：
#      repository= 指定仓库的链接，优先级repository > github_repo,可用值举例:
#                     https://xxxx.com/hooke007/example.git
#                     git@xxxx.com:hooke007/example.git
#                  注意：github_repo填hooke007/example，这个会用于mkdir
#                       ref= 填 "(branch commit)"
#     github_repo= 上游github仓库，默认值：hooke007/MPV_lazy
#             ref= 上游仓库的main分支reference值，可用值举例：
#                     latest_release
#                     refs/heads/main
#                     main
#                     refs/tags/20230127
#                     20230127
#                     0509dec3de42cbfe192ee228b2ba60119b72fab5
#                     0509dec
#             cmd= 克隆完后，加糖前执行的命令

# 该ini文件由bash脚本读取，修改参数可能需要点简单的bash脚本知识
# 例如：
#     如果一个参数调用了其他参数，被调参数须在主调参数之前
#     通配符 *
#     参数值有空格需要用""括起；
#     使用参数的方式为"$key_name"
#     7z 解压常用参数： filename：只解压或提取 filename
#         x 按目录层次解压 e 提取文件 -bd 不显示进度 -o解压至该路径 -x!排除包内的路径 -aoa 或 -y 强制覆盖
#     cmd="mv $download_file $pack_name/" 将下载好的 $download_file 移动至 $pack_name/ 文件夹，-f 强制覆盖
#

# mpv可执行文件
[mpv]
run=true
task=download
github_repo=shinchiro/mpv-winbuild-cmake
download_file="mpv-x86_64-v3-*.7z"
cmd="7z e -bd -o$pack_name $download_file mpv.com mpv.exe doc/manual.pdf"

# 增强mpv的流媒体解析能力
[yt-dlp]
run=true
task=download
github_repo=yt-dlp/yt-dlp
download_file="yt-dlp.exe"
cmd="mv $download_file $pack_name/"

# VapourSynth依赖
[python-3.10]
run=true
task=download
download_url=https://www.python.org/ftp/python/3.10.10/python-3.10.10-embed-amd64.zip
download_file="python-3.10.10-embed-amd64.zip"
cmd="7z x -bd -o$pack_name $download_file -x!LICENSE.txt"

# VapourSynth - VS脚本依赖
[VapourSynth-R61]
run=true
task=download
github_repo=vapoursynth/vapoursynth
download_file="VapourSynth64-Portable-R61.7z"
cmd="7z x -bd -y -o$pack_name $download_file -x!sdk/ -x!doc/ -x!vapoursynth64/plugins/.keep"

# mvtools补帧依赖
[mvtools]
run=true
task=download
github_repo=dubhater/vapoursynth-mvtools
download_file="vapoursynth-mvtools-v*-win64.7z"
cmd="7z x -bd -y -o$pack_name/vapoursynth64/plugins/ $download_file"

# RIFE 2x std模型
[RIFE models]
run=true
task=clone
github_repo=HomeOfVapourSynthEvolution/VapourSynth-RIFE-ncnn-Vulkan
ref=latest_release
# 这里已经提前在[init]中mkdir -p $pack_name/vapoursynth64/plugins/models/
cmd="mv -v $github_repo/models/rife-v4/ $pack_name/vapoursynth64/plugins/models/"

# RIFE 2x std补帧依赖
[Miscellaneous_Filters]
run=true
task=download
github_repo=vapoursynth/vs-miscfilters-obsolete
download_file="miscfilters-r*.7z"
cmd="7z e -bd -y -o$pack_name/vapoursynth64/plugins/ $download_file win64/MiscFilters.dll"

# RIFE 2x std补帧依赖
[RIFE]
run=true
task=download
github_repo=HomeOfVapourSynthEvolution/VapourSynth-RIFE-ncnn-Vulkan
download_file="RIFE-r*-win64.7z"
cmd="7z e -bd -y -o$pack_name/vapoursynth64/plugins/ $download_file RIFE.dll"

# RIFE 2x std补帧依赖
[VMAF]
run=true
task=download
github_repo=HomeOfVapourSynthEvolution/VapourSynth-VMAF
download_file="VMAF-r*-win64.7z"
cmd="7z e -bd -y -o$pack_name/vapoursynth64/plugins/ $download_file VMAF.dll"

# main分支缺失的LXGWWenKaiMono-Regular.ttf
[LXGWWenKaiMono-Regular.ttf]
run=true
task=download
download_url=https://github.com/lxgw/LxgwWenKai/releases/latest/download/LXGWWenKaiMono-Regular.ttf
download_file=LXGWWenKaiMono-Regular.ttf

# main分支缺失的UbuntuMono-Regular.ttf
[UbuntuMono-Regular.ttf]
run=true
task=download
download_url=https://fonts.google.com/download?family=Ubuntu%20Mono
download_file=Ubuntu_Mono.zip
cmd="7z e -bd $download_file UbuntuMono-Regular.ttf"

# 把main的相关提交移动至lite(custom_ref)中
[lazy]
run=true
task=lazy
github_repo=hooke007/MPV_lazy
ref=latest_release
cmd="mv LXGWWenKaiMono-Regular.ttf $github_repo/portable_config/fonts/ && mv UbuntuMono-Regular.ttf $github_repo/portable_config/fonts/"

# 必须空一行，用注释占位(TODO: 懒得看是哪里出bug了)
